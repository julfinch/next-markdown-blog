import Head from 'next/head'
import fs from 'fs'
import path from 'path'
import matter from 'gray-matter'
import { Inter } from 'next/font/google'
import Post from '../../components/Post'
import { sortByDate } from '../../utils'

const inter = Inter({ subsets: ['latin'] })

export default function Home({posts}) {
  console.log(posts)
  return (
    <>
      <Head>
        <title>Finch Dev Blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="posts">
        {posts.map((post, index) => (
          <Post post={post} key={index}/>
        ))}
      </div>
    </>
  )
}

export async function getStaticProps() {
  //Get files from the posts directory
  const files = fs.readdirSync(path.join('posts'))
  
  //Get slug and frontmatter from posts
  const posts = files.map((filename) => {
    //Create slug
    //We will replace the .md tag with nothing and return the slug
    //We should get an array with the objects with slug and filename
    const slug = filename.replace(".md", "")

    // Get frontmatter
    const markdownWithMeta = fs.readFileSync(
      path.join('posts', filename), 
      'utf-8'
    )

    // To parse markdownMeta, we use gray-matter and wrap it
    // Destructure to extract the data and rename it as frontmatter
    // In addition to the slug, we will also return frontmatter
    const { data: frontmatter } = matter(markdownWithMeta)
    return {
      slug,
      frontmatter
    }
  })

  return {
    props: {
      posts: posts.sort(sortByDate)
    }
  }
}